{"version":3,"file":"index.js","sources":["../src/Emitter.ts","../src/Entity.ts","../src/EntityPool.ts","../src/QueryMap.ts","../src/Application.ts"],"sourcesContent":["export default class Emitter {\n\n    topics: Record<string, Set<IListener>> = {}\n\n    emit(id: string, ...data: any[]) {\n        const listeners = this.topics[id];\n        \n        if(!listeners || listeners.size < 0) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(...data));\n    }\n\n    hasTopic(id: string) {\n        return Reflect.has(this.topics, id);\n    }\n\n    on(id: string, listener: IListener) {\n        if(!this.hasTopic(id)) {\n            this.topics[id] = new Set();\n        }\n\n        this.topics[id].add(listener);\n\n        return () => this.off(id, listener);\n    }\n\n    once(id: string, listener: IListener) {\n        const proxy = (...data: any[]) => {\n            this.off(id, proxy);\n\n            listener(...data);\n        };\n\n        return this.on(id, proxy);\n    }\n\n    off(id: string, listener: IListener) {\n        if(this.hasTopic(id)) {\n            this.topics[id].delete(listener);\n        }\n    }\n    \n    destroy() {\n        this.topics = {};\n    }\n\n}","import Emitter from \"./Emitter\";\n\nlet id: number = 0;\n\nexport default class Entity extends Emitter implements IEntity {\n\n    id: number;\n    tags: Set<string>;\n    components: Set<string>;\n\n    constructor() {\n        super();\n        this.id = id++;\n        this.tags = new Set();\n        this.components = new Set();\n        \n        this.tag('*');\n    }\n\n    hasComponent(component: string) {\n        return this.components.has(`@${component}`);\n    }\n\n    attach(prop: string, data: any) {\n        this[prop as keyof Entity] = data;\n        this.tag(`@${prop}`);\n        this.components.add(prop);\n        this.emit(\"attach\", prop, this);\n\n        return this;\n    }\n\n    detach(prop: string) {\n        delete this[prop as keyof Entity];\n        this.untag(`@${prop}`);\n        this.components.delete(prop);\n        this.emit(\"detach\", prop, this);\n\n        return this;\n    }\n    \n    tag(tag: string) {\n        this.tags.add(tag);\n        this.emit(\"tag\", tag, this);\n\n        return this;\n    }\n\n    untag(tag: string) {\n        if(this.hasComponent(tag)) {\n            console.warn(`Component ${tag} could not be detached.`);\n        }\n        this.tags.delete(tag);\n        this.emit(\"untag\", tag, this);\n\n        return this;\n    }\n\n    destroy() {\n        super.destroy();\n        this.components.forEach(component => this.detach(component));\n        this.components.clear();\n        this.tags.clear();\n        this.tags.add(\"*\");\n    }\n\n}\n","import Entity from \"./Entity\";\n\nexport default class EntityPool {\n    entities: IEntity[] = [];\n\n    constructor() {\n        this.expand();\n    }\n\n    getEntities(n: number) {\n        if(n > this.entities.length) {\n            this.expand(n - this.entities.length);\n        }\n        return this.entities.splice(0, n);\n    }\n\n    getEntity() {\n        if(!this.entities.length) {\n            this.expand();\n        }\n\n        return this.entities.pop();\n    }\n\n    recycle(entity: IEntity) {\n        entity.destroy();\n        this.entities.push(entity);\n    }\n\n    expand(n = 10) {\n        for(let i = 0; i < n; i++) {\n            this.entities.push(new Entity());\n        }\n    }\n\n}\n","export default class QueryMap implements IQueryMap {\n\n    app: IApplication\n    queryMap: Map<string[], Set<IEntity>>\n\n    handleTag = (_tag: string, entity: IEntity) => {\n        this.addToMap(entity);\n    }\n\n    handleUntag = (tag: string, entity: IEntity) => {\n        this.queryMap.forEach((entities, query) => {\n            if(entities.has(entity) && query.includes(tag)) {\n                entities.delete(entity);\n            }\n        });\n    }\n\n    constructor(app: IApplication) {\n        this.app = app;\n        this.queryMap = new Map();\n        this.app.on(\"add\", this.onAdd.bind(this));\n        this.app.on(\"remove\", this.onRemove.bind(this));\n    }\n\n    getEntities(query: string[]) {\n        if(!this.queryMap.has(query)) {\n            const entitySet: Set<IEntity> = new Set();\n            this.app.entities.forEach(entity => {\n                if(QueryMap.matchesQuery(entity, query)) {\n                    entitySet.add(entity);\n                }\n            });\n            this.queryMap.set(query, entitySet);\n        }\n        return this.queryMap.get(query);\n    }\n\n    onAdd(entity: IEntity) {\n        entity.on(\"tag\", this.handleTag);\n        entity.on(\"untag\", this.handleUntag);\n        \n        this.addToMap(entity);\n    }\n\n    onRemove(entity: IEntity) {\n        entity.off(\"tag\", this.handleTag);\n        entity.off(\"untag\", this.handleUntag);\n\n        this.removeFromMap(entity);\n    }\n\n    addToMap(entity: IEntity) {\n        this.queryMap.forEach((entities, query) => {\n            const matches = QueryMap.matchesQuery(entity, query);\n            if(matches) {\n                entities.add(entity);\n            }\n        });\n    }\n\n    removeFromMap(entity: IEntity) {\n        this.queryMap.forEach((entities) => {\n            if(entities.has(entity)) {\n                entities.delete(entity);\n            }\n        });\n    }\n\n    static matchesQuery(entity: IEntity, query: string[]) {\n        if(Array.isArray(query)) {\n            return query.every(q => entity.tags.has(q));\n        }\n\n        return entity.tags.has(query);\n    }\n\n}","import Emitter from \"./Emitter\";\nimport EntityPool from \"./EntityPool\";\nimport QueryMap from \"./QueryMap\";\n\nexport default class Application extends Emitter implements IApplication {\n\n    data: {}\n    entityPool: EntityPool\n    entities: Set<IEntity>\n    systems: Set<ISystem>\n    queryMap: IQueryMap\n    running: boolean = false\n    _lastStep: number = 0;\n    _frameRequest: number | null = null;\n\n    constructor({ data = {}, systems } : { data: {}, systems: ISystem[] }) {\n        super();\n        this.data = data;\n        this.entityPool = new EntityPool();\n        this.entities = new Set();\n        this.systems = new Set(systems);\n        this.queryMap = new QueryMap(this);\n    }\n\n    add(entity: IEntity) {\n        this.emit(\"add\", entity);\n        this.entities.add(entity);\n    }\n\n    remove(entity: IEntity) {\n        this.emit(\"remove\", entity);\n        this.entities.delete(entity);\n        this.entityPool.recycle(entity);\n    }\n\n    query(q: string[]) {\n        return this.queryMap.getEntities(q);\n    }\n\n    start() {\n        if(this.running)\n            return;\n        this.running = true;\n        this._lastStep = performance.now();\n\n        this.systems.forEach(system => system(this));\n\n        this.emit(\"init\", this);\n    \n        const loop = () => {\n            this.update();\n            this._lastStep = performance.now();\n            this._frameRequest = requestAnimationFrame(loop);\n        };\n    \n        requestAnimationFrame(loop);\n    }\n\n    update() {\n        const now = performance.now();\n        const dt = (now - this._lastStep) / 1000;\n\n        this._lastStep = now;\n\n        this.emit(\"update\", dt, this);\n    }\n\n    stop() {\n        if(this._frameRequest)\n            cancelAnimationFrame(this._frameRequest);\n        this._frameRequest = null;\n        this.running = false;\n        this.emit(\"stop\");\n    }\n    \n}"],"names":[],"mappings":"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"}